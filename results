eat(John)
exists x.(student(x) & eat(x))
all x.(student(x) -> eat(x))
exists z1.(sandwich(z1) & eat(John,z1))
all x.(student(x) -> eat(\y.conj(\x.drink(x),y),x))
exists z5.(soda(z5) & drink(\y.conj(\x.exists z6.(sandwich(z6) & eat(x,z6)),y),z5))(John)
conj(\P.P(Mary),John,\x.eat(x))
exists x.(student(x) & exists z8.(essay(z8) & write(\y.conj(eat(?obj3),y),z8))(x))
all x.(student(x) -> exists z11.(sandwich(z11) & eat(\y.conj(\x.exists z12.(soda(z12) & drink(x,z12)),y),z11))(x))
all z13.(sandwich(z13) -> eat(John,z13))
all z15.(sandwich(\y.conj(\z15.bagel(z15),y),z15) -> eat(John,z15))
-exists x.(person(x) & exists z16.(bagel(z16) & eat(x,z16)))
exists x.(person(x) & -eat(x))
-eat(\y.conj(\x.drink(x),y),Jack)
-exists x.(student(x) & exists z17.(bagel(z17) & eat(x,z17)))
eat(John)
